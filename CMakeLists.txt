# -*- CMakeLists.txt generated by CodeLite IDE. Do not edit by hand -*-

cmake_minimum_required(VERSION 2.8.11)

# Project name
project(owl_back)

# This setting is useful for providing JSON file used by CodeLite for code completion
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

# Set default locations
set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/../cmake-build-Debug/output)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})

set(CONFIGURATION_NAME "Debug")

# Projects


# Top project
# Define some variables
set(PROJECT_owl_back_PATH "${CMAKE_CURRENT_LIST_DIR}")
set(WORKSPACE_PATH "${CMAKE_CURRENT_LIST_DIR}/..")



#{{{{ User Code 1
# Place your code here
#}}}}

include_directories(
    .
    include/

)


# Compiler options
add_definitions(-g)
add_definitions(-O0)
add_definitions(-Wall)

# Linker options
set(LINK_OPTIONS -lboost_system -pthread -lboost_thread -lmysqlcppconn -lssl -lcrypto)


if(WIN32)
    # Resource options
endif(WIN32)

# Library path
set(CMAKE_LDFLAGS "${CMAKE_LDFLAGS} -Llib/boost/ -Llib/ckjwt/ -L. ")

# Define the CXX sources
set ( CXX_SRCS
    ${CMAKE_CURRENT_LIST_DIR}/source/database/dao/DAOComodos.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/database/dao/DAOUsuarios.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/database/dao/DAOUsuarioComodo.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/database/dao/DAOUsuarioSensor.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/database/dao/DAOOcorrencias.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/json/serializer/SensorSerializer.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/json/serializer/UsuarioSerializer.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/json/OcorrenciaSerializer.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/database/dao/DAOSensores.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/controls/ComodoControl.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/mweb/UsuarioWebRouter.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/controls/UsuarioComodoControl.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/networking/ClientManager.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/networking/Client.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/json/serializer/ComodoSerializer.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/mweb/UsuarioSensorWebRouter.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/json/MWebSessionSerializer.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/controls/SensorControl.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/controls/UsuarioControl.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/logging/Logger.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/controls/OcorrenciaControl.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/enc/md5.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/main.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/networking/Server.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/database/datasheet.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/networking/SensorManager.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/mweb/UsuarioComodoWebRouter.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/mweb/WebRouter.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/database/mysql_manager.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/controls/SessionControl.cpp
    ${CMAKE_CURRENT_LIST_DIR}/source/controls/UsuarioSensorControl.cpp
)

set_source_files_properties(
    ${CXX_SRCS} PROPERTIES COMPILE_FLAGS 
    " -g -O0 -Wall")

if(WIN32)
    enable_language(RC)
    set(CMAKE_RC_COMPILE_OBJECT
        "<CMAKE_RC_COMPILER> ${RC_OPTIONS} -O coff -i <SOURCE> -o <OBJECT>")
endif(WIN32)



#{{{{ User Code 2
# Place your code here
#}}}}

add_executable(owl_back ${RC_SRCS} ${CXX_SRCS} ${C_SRCS})
target_link_libraries(owl_back ${LINK_OPTIONS})



#{{{{ User Code 3
# Place your code here
#}}}}

